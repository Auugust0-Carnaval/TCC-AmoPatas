// <auto-generated />
using System;
using AmoPatass.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AmoPatass.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220310041819_FirstMigrationn")]
    partial class FirstMigrationn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AmoPatass.AnimaisFoto", b =>
                {
                    b.Property<int>("IdAnimal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAnimal"), 1L, 1);

                    b.Property<int>("PetsIdAnimal")
                        .HasColumnType("int");

                    b.Property<byte[]>("ftAnimal")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("IdAnimal");

                    b.HasIndex("PetsIdAnimal");

                    b.ToTable("AnimaisFotos");
                });

            modelBuilder.Entity("AmoPatass.Categoria", b =>
                {
                    b.Property<int>("IdCatetegoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCatetegoria"), 1L, 1);

                    b.HasKey("IdCatetegoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("AmoPatass.Interessados", b =>
                {
                    b.Property<int>("IdPessoa")
                        .HasColumnType("int");

                    b.Property<int>("idAnimal")
                        .HasColumnType("int");

                    b.HasKey("IdPessoa", "idAnimal");

                    b.HasIndex("idAnimal");

                    b.ToTable("Interessados");
                });

            modelBuilder.Entity("AmoPatass.PessoaFoto", b =>
                {
                    b.Property<int>("IdPessoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPessoa"), 1L, 1);

                    b.Property<int>("PessoasidPessoa")
                        .HasColumnType("int");

                    b.HasKey("IdPessoa");

                    b.HasIndex("PessoasidPessoa");

                    b.ToTable("PessoaFoto");
                });

            modelBuilder.Entity("AmoPatass.Pessoas", b =>
                {
                    b.Property<int>("idPessoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPessoa"), 1L, 1);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("FotoPerfil")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RedeSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nmPessoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idPessoa");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("AmoPatass.Pets", b =>
                {
                    b.Property<int>("IdAnimal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAnimal"), 1L, 1);

                    b.Property<int>("CategoriaIdCatetegoria")
                        .HasColumnType("int");

                    b.Property<int>("IdCatetegoria")
                        .HasColumnType("int");

                    b.Property<int>("IdDoador")
                        .HasColumnType("int");

                    b.Property<int>("IdPorte")
                        .HasColumnType("int");

                    b.Property<int>("IdRaca")
                        .HasColumnType("int");

                    b.Property<int?>("IdRga")
                        .HasColumnType("int");

                    b.Property<int>("IdSexo")
                        .HasColumnType("int");

                    b.Property<int>("IdSituacao")
                        .HasColumnType("int");

                    b.Property<int>("IdTutor")
                        .HasColumnType("int");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<int>("PessoasidPessoa")
                        .HasColumnType("int");

                    b.Property<int>("PorteIdPorte")
                        .HasColumnType("int");

                    b.Property<int>("RacasIdRaca")
                        .HasColumnType("int");

                    b.Property<int>("RgaIdRga")
                        .HasColumnType("int");

                    b.Property<int>("SexoIdSexo")
                        .HasColumnType("int");

                    b.Property<int>("SituacoesIdSituacao")
                        .HasColumnType("int");

                    b.Property<string>("UfAnimal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cdAnimal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dsAnimal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dtAdocao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtPublicacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("nmAnimal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAnimal");

                    b.HasIndex("CategoriaIdCatetegoria");

                    b.HasIndex("PessoasidPessoa");

                    b.HasIndex("PorteIdPorte");

                    b.HasIndex("RacasIdRaca");

                    b.HasIndex("RgaIdRga");

                    b.HasIndex("SexoIdSexo");

                    b.HasIndex("SituacoesIdSituacao");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("AmoPatass.Porte", b =>
                {
                    b.Property<int>("IdPorte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPorte"), 1L, 1);

                    b.HasKey("IdPorte");

                    b.ToTable("Portes");
                });

            modelBuilder.Entity("AmoPatass.Preferencias", b =>
                {
                    b.Property<int>("CategoriaIdCatetegoria")
                        .HasColumnType("int");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int");

                    b.Property<int>("IdPorte")
                        .HasColumnType("int");

                    b.Property<int>("IdSexo")
                        .HasColumnType("int");

                    b.Property<int>("PessoasidPessoa")
                        .HasColumnType("int");

                    b.Property<int>("PorteIdPorte")
                        .HasColumnType("int");

                    b.Property<int>("SexoIdSexo")
                        .HasColumnType("int");

                    b.Property<DateTime>("mtPreferencia")
                        .HasColumnType("datetime2");

                    b.Property<int>("sqPreferencia")
                        .HasColumnType("int");

                    b.HasIndex("CategoriaIdCatetegoria");

                    b.HasIndex("PessoasidPessoa");

                    b.HasIndex("PorteIdPorte");

                    b.HasIndex("SexoIdSexo");

                    b.ToTable("Preferencias");
                });

            modelBuilder.Entity("AmoPatass.Racas", b =>
                {
                    b.Property<int>("IdRaca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRaca"), 1L, 1);

                    b.Property<int>("CategoriaIdCatetegoria")
                        .HasColumnType("int");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("dsRaca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRaca");

                    b.HasIndex("CategoriaIdCatetegoria");

                    b.ToTable("Racas");
                });

            modelBuilder.Entity("AmoPatass.Rga", b =>
                {
                    b.Property<int>("IdRga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRga"), 1L, 1);

                    b.Property<string>("dsRga")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRga");

                    b.ToTable("Rgas");
                });

            modelBuilder.Entity("AmoPatass.Sexo", b =>
                {
                    b.Property<int>("IdSexo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSexo"), 1L, 1);

                    b.HasKey("IdSexo");

                    b.ToTable("Sexos");
                });

            modelBuilder.Entity("AmoPatass.Situacoes", b =>
                {
                    b.Property<int>("IdSituacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSituacao"), 1L, 1);

                    b.Property<string>("dsSituacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSituacao");

                    b.ToTable("Situacoes");
                });

            modelBuilder.Entity("AmoPatass.AnimaisFoto", b =>
                {
                    b.HasOne("AmoPatass.Pets", "Pets")
                        .WithMany()
                        .HasForeignKey("PetsIdAnimal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("AmoPatass.Interessados", b =>
                {
                    b.HasOne("AmoPatass.Pessoas", "Pessoas")
                        .WithMany()
                        .HasForeignKey("IdPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmoPatass.Pets", "Pets")
                        .WithMany()
                        .HasForeignKey("idAnimal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoas");

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("AmoPatass.PessoaFoto", b =>
                {
                    b.HasOne("AmoPatass.Pessoas", "Pessoas")
                        .WithMany()
                        .HasForeignKey("PessoasidPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoas");
                });

            modelBuilder.Entity("AmoPatass.Pets", b =>
                {
                    b.HasOne("AmoPatass.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaIdCatetegoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmoPatass.Pessoas", "Pessoas")
                        .WithMany()
                        .HasForeignKey("PessoasidPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmoPatass.Porte", "Porte")
                        .WithMany()
                        .HasForeignKey("PorteIdPorte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmoPatass.Racas", "Racas")
                        .WithMany()
                        .HasForeignKey("RacasIdRaca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmoPatass.Rga", "Rga")
                        .WithMany()
                        .HasForeignKey("RgaIdRga")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmoPatass.Sexo", "Sexo")
                        .WithMany()
                        .HasForeignKey("SexoIdSexo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmoPatass.Situacoes", "Situacoes")
                        .WithMany()
                        .HasForeignKey("SituacoesIdSituacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Pessoas");

                    b.Navigation("Porte");

                    b.Navigation("Racas");

                    b.Navigation("Rga");

                    b.Navigation("Sexo");

                    b.Navigation("Situacoes");
                });

            modelBuilder.Entity("AmoPatass.Preferencias", b =>
                {
                    b.HasOne("AmoPatass.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaIdCatetegoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmoPatass.Pessoas", "Pessoas")
                        .WithMany()
                        .HasForeignKey("PessoasidPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmoPatass.Porte", "Porte")
                        .WithMany()
                        .HasForeignKey("PorteIdPorte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmoPatass.Sexo", "Sexo")
                        .WithMany()
                        .HasForeignKey("SexoIdSexo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Pessoas");

                    b.Navigation("Porte");

                    b.Navigation("Sexo");
                });

            modelBuilder.Entity("AmoPatass.Racas", b =>
                {
                    b.HasOne("AmoPatass.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaIdCatetegoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });
#pragma warning restore 612, 618
        }
    }
}
